<?php

/**
 * Implement hook_block_view_alter().
 */
function axa_toolkit_page_alter(&$page) {
  if( drupal_is_front_page() ){
    $page['content']['#attached']['library'][] = array('system', 'drupal.ajax');
  }
  if ($_GET['q'] == 'node/2') {
     $page['content']['#attached']['library'][] = array('system', 'drupal.ajax'); 
  }
}
/**
 * Implement hook_form_FORM_ID_alter().
 */
function axa_toolkit_form_user_login_alter(&$form, &$form_state, $form_id) {
  if( drupal_is_front_page() ){
    // Wrap the form in a <div> with a known ID so it can be targeted via AJAX.
    $form['#prefix'] = '<div id="dialog-user-user-login">';
    $form['#suffix'] = '</div>';

    // Make the 'Log in' button the primary action.
    // $form['actions']['submit']['#attributes']['class'][] = 'button--primary';  

    // Add an AJAX submission callback.
    $form['actions']['submit']['#ajax'] = array(
      'callback' => 'axa_toolkit_user_login_submit',
      'event' => 'click',
    );
  }
}
/**
 * Ajax callback for the user login form.
 *
 * @see dialog_user_form_user_login_alter()
 */
function axa_toolkit_user_login_submit($form, &$form_state) {
  if( drupal_is_front_page() ){
    // Display form errors, otherwise close the dialog and reload the page.
    if (form_get_errors()) {
      // print_r('ici');die();
      unset($form['#prefix'], $form['#suffix']);
      $status_messages = array('#theme' => 'status_messages');
      $output = drupal_render($form);
      $output = '<div>' . drupal_render($status_messages) . $output . '</div>';
      $commands[] = ajax_command_html('#dialog-user-user-login', $output);
    }
    else {
      $commands[] = dialog_command_close_modal_dialog();
      $commands[] = dialog_command_reload();
    }

    return array(
      '#type' => 'ajax',
      '#commands' => $commands,
    );
  }
}
/**
 * Implements hook_user_presave().
 */
function axa_toolkit_user_presave(&$edit,$account, $category) {
  // $edit['name'] = $edit['mail'];
}

/**
  * Implements hook_form_alter().
  */
  function axa_toolkit_form_alter(&$form, &$form_state, $form_id) {
    // if ($form_id == 'user_register_form' ) { // id of registration form
    //   // $form['account']['name']['#access'] = FALSE;
    // }
    // if ($form_id == 'user_register_form') {
    //   $form['#validate'][] = 'axa_toolkit_user_register_form_validate';
    // }
    // if ($form_id == 'user_login_form' ) {
    //   print_r($form);die();
    // }
    switch ($form_id) {
      case 'user_login':
        break;
      case 'user_register_form':
        $form['#validate'][] = 'axa_toolkit_user_register_form_validate';
        break;
      default:
        # code...
        break;
    }
   }


function axa_toolkit_user_register_form_validate($form, &$form_state){
  module_load_include('module', 'ws_client');  
  $numContrat = $form_state['values']['field_numero_contrat']['und'][0]['value'];
  if (isset($numContrat)) {
    $result = ws_client_getIdClient($numContrat);	
    //   print_r($result); die();
    // form_set_error('title', 'Title cannot be "test"');
  }
  
}

/**
* Implementation of hook_services_services().
*/
function axa_toolkit_services_resources() {
  $resources = array(
    'sinistre' => array(
      'actions' => array(
        'create' => array(
          'help' => t('Create a sinistre.'),
          'file' => array(
            'type' => 'inc',
            'module' => 'axa_toolkit',
            'name' => 'axa_toolkit',
          ),
          'callback' => '_sinistre_service_create',
          'args' => array(
              array(
                'name' => 'data',
                'type' => 'struct',
                'description' => 'The sinistre object',
                'source' => 'data',
                'optional' => FALSE,
            ),
          ),
          'access arguments' => array('access content'),
        ),
      ),
    ),
    'devis' => array(
      'actions' => array(
        'create' => array(
          'help' => t('Create a devis.'),
          'file' => array(
            'type' => 'inc',
            'module' => 'axa_toolkit',
            'name' => 'axa_toolkit',
          ),
          'callback' => '_devis_service_create',
          'args' => array(
              array(
                'name' => 'data',
                'type' => 'struct',
                'description' => 'The devis object',
                'source' => 'data',
                'optional' => FALSE,
            ),
          ),
          'access arguments' => array('access content'),
        ),
      ),
    ),
  'userinfos' => array(
      'actions' => array(
        'update' => array(
          'help' => t('Update user infos'),
          'file' => array(
            'type' => 'inc',
            'module' => 'axa_toolkit',
            'name' => 'axa_toolkit',
          ),
          'callback' => '_userinfos_service_update',
          'args' => array(
              array(
                'name' => 'data',
                'type' => 'struct',
                'description' => 'The preference object',
                'source' => 'data',
                'optional' => FALSE,
            ),
          ),
          'access arguments' => array('access content'),
        ),
      ),
    ),
  );
  return $resources;
}

/**
 * Implements hook_block_info().
 */
function axa_toolkit_block_info(){
    return array(
    'search_button' => array(
      'info' => t('Search Button'),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function axa_toolkit_block_view($delta = '')
{
    switch ($delta){
        case  'search_button':

        default:
            break;
    }
}
